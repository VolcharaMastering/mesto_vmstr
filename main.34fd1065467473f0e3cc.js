!function(){"use strict";var e={activeForm:".popup__inputs",formInput:".popup__input",popupSaveButton:".popup__save",popupDisableButton:"popup__save_disable",inputError:"popup__input_type_error",activeError:"popup__input_error_active"},t=document.querySelector(".gallery"),n=document.forms.profile,r=document.forms.addImage,o=document.forms.addAvatar,i=t.querySelector(".profile__avatar-image"),a=n.elements.name,c=n.elements.about,u=t.querySelector(".profile__edit-button"),s=t.querySelector(".profile__add-button"),l=t.querySelector(".profile__avatar"),f={url:"https://mesto.nomoreparties.co/v1/cohort-43/",headers:{"Content-type":"application/json",authorization:"9ccf29bd-3d67-4cc8-8c99-82c18d019a44"}};function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=function(){function e(t,n,r,o,i){var a=this,c=o.handleCardDelete,u=o.delLike,s=o.addLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"_getTemplate",(function(){return document.querySelector(a._selector).content.cloneNode(!0)})),d(this,"_deleteImage",(function(){a._handleCardDelete(a._card)})),d(this,"_addEvents",(function(){a._card.owner._id==a._myId?a._cardRemove.addEventListener("click",a._deleteImage):(a._cardRemove.remove(),a._cardRemove=null),a._cardLike.addEventListener("click",(function(){a._like?a._delLike(a._card._id):a._addLike(a._card._id)})),a._cardImage.addEventListener("click",(function(){a._handleCardClick(a._card.name,a._card.link)}))})),d(this,"_checkLikes",(function(){a._card.likes.length>0&&a._card.likes.find((function(e){return e._id==a._myId}))?(a._cardLike.classList.add("card__like_active"),a._like=!0):a._like=!1})),d(this,"_addLikeCounter",(function(e){a._likeNumber.textContent=e})),d(this,"updateLikes",(function(e){a._card.likes=e,a._checkLikes(),a._addLikeCounter(a._card.likes.length)})),this._card=t,this._selector=n,this._handleCardClick=r,this._handleCardDelete=c,this._delLike=u,this._addLike=s,this._myId=i,this._like=!1}var t,n;return t=e,(n=[{key:"delCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"toggleLikeIcon",value:function(){this._cardLike.classList.toggle("card__like_active")}},{key:"makeCard",value:function(){return this._cardTemplate=this._getTemplate(),this._cardElement=this._cardTemplate.querySelector(".card"),this._cardImage=this._cardTemplate.querySelector(".card__image"),this._cardName=this._cardTemplate.querySelector(".card__name"),this._cardRemove=this._cardTemplate.querySelector(".card__remove"),this._cardLike=this._cardTemplate.querySelector(".card__like"),this._likeNumber=this._cardTemplate.querySelector(".card__like-count"),this._checkLikes(),this._addLikeCounter(this._card.likes.length),this._cardImage.setAttribute("src",this._card.link),this._cardImage.setAttribute("alt","Фото из галереи: "+this._card.name),this._cardName.textContent=this._card.name,this._addEvents(),this._cardTemplate}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){return e._renderer(t)}))}},{key:"prepends",value:function(e){this._container.prepend(e)}},{key:"appends",value:function(e){this._container.append(e)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return t&&v(e.prototype,t),n&&v(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=b((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m(this,"_setEventListeners",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),m(this,"enableValidation",(function(){r._setEventListeners()})),m(this,"_showInputError",(function(e,t){var n=r._form.querySelector(".".concat(e.id,"-error"));e.classList.add(r._inputError),n.classList.add(r._activeError),n.textContent=t})),m(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputError),t.classList.remove(r._activeError),t.textContent=""})),m(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),m(this,"_hasInvalidInput",(function(){return r._inputArray.some((function(e){return!e.validity.valid}))})),m(this,"_toggleButtonState",(function(){r._hasInvalidInput()?(r._saveButton.classList.add(r._popupDisableButton),r._saveButton.setAttribute("disabled","disabled")):(r._saveButton.classList.remove(r._popupDisableButton),r._saveButton.removeAttribute("disabled"))})),m(this,"resetValidation",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){r._hideInputError(e)}))})),this._activeForm=t.activeForm,this._formInput=t.formInput,this._popupSaveButton=t.popupSaveButton,this._popupDisableButton=t.popupDisableButton,this._inputError=t.inputError,this._activeError=t.activeError,this._form=n,this._inputArray=Array.from(this._form.querySelectorAll(this._formInput)),this._saveButton=this._form.querySelector(this._popupSaveButton)}));function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",this._closeListener=function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close"))&&e.close()})}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function O(e,t){return O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},O(e,t)}function L(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return S(e)}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(r){var o=C(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return L(this,e)});function i(e){var t,n,r,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),c=function(e,r){n._bigImage.setAttribute("src",r),n._bigImage.setAttribute("alt","Увеличенное фото из галереи: "+e),n._bigImageCaption.textContent=e,j((t=S(n),C(i.prototype)),"open",t).call(t)},(a="open")in(r=S(n=o.call(this,e)))?Object.defineProperty(r,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):r.open=c,n._bigImage=n._popup.querySelector(".popup__image"),n._bigImageCaption=n._popup.querySelector(".popup__image-caption"),n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(w);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function x(e,t){return x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},x(e,t)}function D(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__inputs"),n._inputArray=n._popup.querySelectorAll(".popup__input"),n._getDataFromApi=t,n._saveButton=n._popup.querySelector(".popup__save"),n._initialText=n._saveButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputArray.forEach((function(t){e[t.name]=t.value})),e}},{key:"renderInitialText",value:function(){this._saveButton.textContent=this._initialText}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._saveButton.textContent="Сохранение...",e._getDataFromApi(e._getInputValues())})),B(A(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){B(A(a.prototype),"close",this).call(this),this._form.reset()}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(w);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){var n=t.name,r=t.about;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=f}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Bug detected! ".concat(e.status))}},{key:"getData",value:function(e){return fetch(this._config.url+e,{headers:this._config.headers}).then(this._checkResponse)}},{key:"delLike",value:function(e){return fetch(this._config.url+e,{headers:this._config.headers,method:"DELETE"}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch(this._config.url+e,{headers:this._config.headers,method:"PUT"}).then(this._checkResponse)}},{key:"setCard",value:function(e,t){return fetch(this._config.url+e,{headers:this._config.headers,method:"POST",body:JSON.stringify(t)}).then(this._checkResponse)}},{key:"delCard",value:function(e,t){return fetch(this._config.url+e+t,{headers:this._config.headers,method:"DELETE"}).then(this._checkResponse)}},{key:"setProfile",value:function(e,t){return fetch(this._config.url+e,{headers:this._config.headers,method:"PATCH",body:JSON.stringify(t)}).then(this._checkResponse)}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function J(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Y(){return Y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=z(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Y.apply(this,arguments)}function z(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=X(e)););return e}function K(e,t){return K=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e,t){if(t&&("object"===H(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return W(e)}function W(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function X(e){return X=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},X(e)}function Z(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var $=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=X(r);if(o){var n=X(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Q(this,e)});function a(){var e;J(this,a);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Z(W(e=i.call.apply(i,[this].concat(n))),"setSubmitAction",(function(t){e._pressYess=t})),e}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__ok").addEventListener("click",(function(t){t.preventDefault(),e._pressYess()})),Y(X(a.prototype),"setEventListeners",this).call(this)}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(w),ee=new I(".popup_big-image");ee.setEventListeners();var te=new $(".popup_question");te.setEventListeners();var ne=new U({name:".profile__name",about:".profile__description"}),re=new G("9ccf29bd-3d67-4cc8-8c99-82c18d019a44");re.getData("users/me").then((function(e){window.myId=e._id,se(e.avatar),ne.setUserInfo(e),re.getData("cards").then((function(e){window.addGalary=new y({items:e,renderer:function(e){var t=oe(e,myId);addGalary.appends(t)}},".photos"),addGalary.renderItems()})).catch((function(e){console.log(e)}))})).catch((function(e){console.log(e)}));var oe=function(e,t){var n=new h(e,".template-card",ue,{handleCardDelete:function(e){te.open(),te.setSubmitAction((function(){re.delCard("cards/",e._id).then((function(){n.delCard(),te.close()})).catch((function(e){console.log(e)}))}))},delLike:function(e){re.delLike("cards/".concat(e,"/likes")).then((function(e){n.updateLikes(e.likes),n.toggleLikeIcon()})).catch((function(e){console.log(e)}))},addLike:function(e){re.addLike("cards/".concat(e,"/likes")).then((function(e){n.toggleLikeIcon(),n.updateLikes(e.likes)})).catch((function(e){console.log(e)}))}},t);return n.makeCard()},ie=new V(".popup_adder",(function(e){re.setCard("cards",e).then((function(e){var t=oe(e,e.owner._id);addGalary.prepends(t),ie.close()})).catch((function(e){console.log(e)})).finally((function(){ie.renderInitialText()}))}));ie.setEventListeners();var ae=new V(".popup_editor",(function(e){re.setProfile("users/me",e).then((function(e){ne.setUserInfo(e),ae.close()})).catch((function(e){console.log(e)})).finally((function(){ae.renderInitialText()}))}));ae.setEventListeners();var ce=new V(".popup_avatar",(function(e){re.setProfile("users/me/avatar",e).then((function(e){se(e.avatar),ce.close()})).catch((function(e){console.log(e)})).finally((function(){ce.renderInitialText()}))}));ce.setEventListeners();var ue=function(e,t){ee.open(e,t)},se=function(e){i.setAttribute("src",e)},le=new g(e,n);le.enableValidation();var fe=new g(e,r);fe.enableValidation();var pe=new g(e,o);pe.enableValidation(),s.addEventListener("click",(function(){ie.open(),fe.resetValidation()})),l.addEventListener("click",(function(){ce.open(),pe.resetValidation()})),u.addEventListener("click",(function(){ae.open();var e=ne.getUserInfo();a.value=e.name,c.value=e.about,le.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,