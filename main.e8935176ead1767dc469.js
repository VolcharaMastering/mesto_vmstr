!function(){"use strict";var e={activeForm:".popup__inputs",formInput:".popup__input",popupSaveButton:".popup__save",popupDisableButton:"popup__save_disable",inputError:"popup__input_type_error",activeError:"popup__input_error_active"},t=document.querySelector(".gallery"),n=document.forms.profile,r=document.forms.addImage,o=document.forms.addAvatar,i=n.elements.name,a=n.elements.about,c=t.querySelector(".profile__edit-button"),u=t.querySelector(".profile__add-button"),s=t.querySelector(".profile__avatar"),l={url:"https://mesto.nomoreparties.co/v1/cohort-43/",headers:{"Content-type":"application/json",authorization:"9ccf29bd-3d67-4cc8-8c99-82c18d019a44"}};function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d=function(){function e(t,n,r,o,i){var a=this,c=o.handleCardDelete,u=o.delLike,s=o.addLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),p(this,"_getTemplate",(function(){return document.querySelector(a._selector).content.cloneNode(!0)})),p(this,"_deleteImage",(function(){a._handleCardDelete(a._card)})),p(this,"_addEvents",(function(){a._card.owner._id==a._myId?a._cardRemove.addEventListener("click",a._deleteImage):(a._cardRemove.remove(),a._cardRemove=null),a._cardLike.addEventListener("click",(function(){a._like?a._delLike(a._card._id):a._addLike(a._card._id)})),a._cardImage.addEventListener("click",(function(){a._handleCardClick(a._card.name,a._card.link)}))})),p(this,"_checkLikes",(function(){a._card.likes.length>0&&a._card.likes.find((function(e){return e._id==a._myId}))?(a._cardLike.classList.add("card__like_active"),a._like=!0):a._like=!1})),p(this,"_addLikeCounter",(function(e){a._likeNumber.textContent=e})),p(this,"updateLikes",(function(e){a._card.likes=e,a._checkLikes(),a._addLikeCounter(a._card.likes.length)})),this._card=t,this._selector=n,this._handleCardClick=r,this._handleCardDelete=c,this._delLike=u,this._addLike=s,this._myId=i,this._like=!1}var t,n;return t=e,(n=[{key:"delCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"toggleLikeIcon",value:function(){this._cardLike.classList.toggle("card__like_active")}},{key:"makeCard",value:function(){return this._cardTemplate=this._getTemplate(),this._cardElement=this._cardTemplate.querySelector(".card"),this._cardImage=this._cardTemplate.querySelector(".card__image"),this._cardName=this._cardTemplate.querySelector(".card__name"),this._cardRemove=this._cardTemplate.querySelector(".card__remove"),this._cardLike=this._cardTemplate.querySelector(".card__like"),this._likeNumber=this._cardTemplate.querySelector(".card__like-count"),this._checkLikes(),this._addLikeCounter(this._card.likes.length),this._cardImage.setAttribute("src",this._card.link),this._cardImage.setAttribute("alt","Фото из галереи: "+this._card.name),this._cardName.textContent=this._card.name,this._addEvents(),this._cardTemplate}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){return e._renderer(t)}))}},{key:"prepends",value:function(e){this._container.prepend(e)}},{key:"appends",value:function(e){this._container.append(e)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return t&&y(e.prototype,t),n&&y(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=v((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"_setEventListeners",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),b(this,"enableValidation",(function(){r._setEventListeners()})),b(this,"_showInputError",(function(e,t){var n=r._form.querySelector(".".concat(e.id,"-error"));e.classList.add(r._inputError),n.classList.add(r._activeError),n.textContent=t})),b(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputError),t.classList.remove(r._activeError),t.textContent=""})),b(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),b(this,"_hasInvalidInput",(function(){return r._inputArray.some((function(e){return!e.validity.valid}))})),b(this,"_toggleButtonState",(function(){r._hasInvalidInput()?(r._saveButton.classList.add(r._popupDisableButton),r._saveButton.setAttribute("disabled","disabled")):(r._saveButton.classList.remove(r._popupDisableButton),r._saveButton.removeAttribute("disabled"))})),b(this,"resetValidation",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){r._hideInputError(e)}))})),this._activeForm=t.activeForm,this._formInput=t.formInput,this._popupSaveButton=t.popupSaveButton,this._popupDisableButton=t.popupDisableButton,this._inputError=t.inputError,this._activeError=t.activeError,this._form=n,this._inputArray=Array.from(this._form.querySelectorAll(this._formInput)),this._saveButton=this._form.querySelector(this._popupSaveButton)}));function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",this._closeListener=function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close"))&&e.close()})}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function O(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return L(e)}function L(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(n);if(r){var o=P(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return O(this,e)});function i(e){var t,n,r,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),c=function(e,r){n._bigImage.setAttribute("src",r),n._bigImage.setAttribute("alt","Увеличенное фото из галереи: "+e),n._bigImageCaption.textContent=e,S((t=L(n),P(i.prototype)),"open",t).call(t)},(a="open")in(r=L(n=o.call(this,e)))?Object.defineProperty(r,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):r.open=c,n._bigImage=n._popup.querySelector(".popup__image"),n._bigImageCaption=n._popup.querySelector(".popup__image-caption"),n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(k);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=B(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function x(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__inputs"),n._inputArray=n._popup.querySelectorAll(".popup__input"),n._getDataFromApi=t,n._saveButton=n._popup.querySelector(".popup__save"),n._initialText=n._saveButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputArray.forEach((function(t){e[t.name]=t.value})),e}},{key:"renderInitialText",value:function(){this._saveButton.textContent=this._initialText}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._saveButton.textContent="Сохранение...",e._getDataFromApi(e._getInputValues())})),T(D(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){T(D(a.prototype),"close",this).call(this),this._form.reset()}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(k);function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.setAttribute("src",e.avatar)}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=l}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Bug detected! ".concat(e.status))}},{key:"getData",value:function(e){return fetch(this._config.url+e,{headers:this._config.headers}).then(this._checkResponse)}},{key:"delLike",value:function(e){return fetch(this._config.url+"cards/".concat(e,"/likes"),{headers:this._config.headers,method:"DELETE"}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch(this._config.url+"cards/".concat(e,"/likes"),{headers:this._config.headers,method:"PUT"}).then(this._checkResponse)}},{key:"setCard",value:function(e){return fetch(this._config.url+"cards",{headers:this._config.headers,method:"POST",body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"delCard",value:function(e){return fetch(this._config.url+"cards/"+e,{headers:this._config.headers,method:"DELETE"}).then(this._checkResponse)}},{key:"setProfile",value:function(e,t){return fetch(this._config.url+"users/me"+e,{headers:this._config.headers,method:"PATCH",body:JSON.stringify(t)}).then(this._checkResponse)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function H(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=Y(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},M.apply(this,arguments)}function Y(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=W(e)););return e}function z(e,t){return z=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},z(e,t)}function K(e,t){if(t&&("object"===G(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Q(e)}function Q(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function W(e){return W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},W(e)}function X(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&z(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=W(r);if(o){var n=W(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return K(this,e)});function a(){var e;H(this,a);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return X(Q(e=i.call.apply(i,[this].concat(n))),"setSubmitAction",(function(t){e._pressYess=t})),e}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__ok").addEventListener("click",(function(t){t.preventDefault(),e._pressYess()})),M(W(a.prototype),"setEventListeners",this).call(this)}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(k),$=new C(".popup_big-image");$.setEventListeners();var ee=new Z(".popup_question");ee.setEventListeners();var te=new N({name:".profile__name",about:".profile__description",avatar:".profile__avatar-image"}),ne=new F;ne.getData("users/me").then((function(e){window.myId=e._id,te.setUserInfo(e),ne.getData("cards").then((function(e){window.addGalary=new _({items:e,renderer:function(e){var t=re(e,myId);addGalary.appends(t)}},".photos"),addGalary.renderItems()})).catch((function(e){console.log(e)}))})).catch((function(e){console.log(e)}));var re=function(e,t){var n=new d(e,".template-card",ce,{handleCardDelete:function(e){ee.open(),ee.setSubmitAction((function(){ne.delCard(e._id).then((function(){n.delCard(),ee.close()})).catch((function(e){console.log(e)}))}))},delLike:function(e){ne.delLike(e).then((function(e){n.toggleLikeIcon(),n.updateLikes(e.likes)})).catch((function(e){console.log(e)}))},addLike:function(e){ne.addLike(e).then((function(e){n.toggleLikeIcon(),n.updateLikes(e.likes)})).catch((function(e){console.log(e)}))}},t);return n.makeCard()},oe=new A(".popup_adder",(function(e){ne.setCard(e).then((function(e){var t=re(e,e.owner._id);addGalary.prepends(t),oe.close()})).catch((function(e){console.log(e)})).finally((function(){oe.renderInitialText()}))}));oe.setEventListeners();var ie=new A(".popup_editor",(function(e){ne.setProfile("",e).then((function(e){te.setUserInfo(e),ie.close()})).catch((function(e){console.log(e)})).finally((function(){ie.renderInitialText()}))}));ie.setEventListeners();var ae=new A(".popup_avatar",(function(e){ne.setProfile("/avatar",e).then((function(e){te.setUserInfo(e),ae.close()})).catch((function(e){console.log(e)})).finally((function(){ae.renderInitialText()}))}));ae.setEventListeners();var ce=function(e,t){$.open(e,t)},ue=new m(e,n);ue.enableValidation();var se=new m(e,r);se.enableValidation();var le=new m(e,o);le.enableValidation(),u.addEventListener("click",(function(){oe.open(),se.resetValidation()})),s.addEventListener("click",(function(){ae.open(),le.resetValidation()})),c.addEventListener("click",(function(){ie.open();var e=te.getUserInfo();i.value=e.name,a.value=e.about,ue.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,