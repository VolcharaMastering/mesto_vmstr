!function(){"use strict";var e={activeForm:".popup__inputs",formInput:".popup__input",popupSaveButton:".popup__save",popupDisableButton:"popup__save_disable",inputError:"popup__input_type_error",activeError:"popup__input_error_active"},t=document.querySelector(".gallery"),n=document.forms.profile,r=document.forms.addImage;function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t,n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_getTemplate",(function(){return document.querySelector(o._selector).content.cloneNode(!0)})),i(this,"_toggleLike",(function(){o._cardLike.classList.toggle("card__like_active")})),i(this,"_deleteImage",(function(e){o._cardTemplate=null,e.target.closest(".card").remove()})),i(this,"_addEvents",(function(){o._cardRemove.addEventListener("click",o._deleteImage),o._cardLike.addEventListener("click",(function(){o._toggleLike(o._cardLike)})),o._cardImage.addEventListener("click",(function(){o._handleCardClick(o._newCardName,o._imageLink)}))})),this._newCardName=t.name,this._imageLink=t.link,this._selector=n,this._handleCardClick=r}var t,n;return t=e,(n=[{key:"makeCard",value:function(){return this._cardTemplate=this._getTemplate(),this._cardImage=this._cardTemplate.querySelector(".card__image"),this._cardName=this._cardTemplate.querySelector(".card__name"),this._cardRemove=this._cardTemplate.querySelector(".card__remove"),this._cardLike=this._cardTemplate.querySelector(".card__like"),this._cardImage.setAttribute("src",this._imageLink),this._cardImage.setAttribute("alt","Фото из галереи: "+this._newCardName),this._cardName.textContent=this._newCardName,this._addEvents(),this._cardTemplate}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){return e._renderer(t)}))}},{key:"prepends",value:function(e){this._container.prepend(e)}},{key:"appends",value:function(e){this._container.append(e)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var f=p((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),l(this,"_setEventListeners",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),l(this,"enableValidation",(function(){r._setEventListeners()})),l(this,"_showInputError",(function(e,t){var n=r._form.querySelector(".".concat(e.id,"-error"));e.classList.add(r._inputError),n.classList.add(r._activeError),n.textContent=t})),l(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputError),t.classList.remove(r._activeError),t.textContent=""})),l(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),l(this,"_hasInvalidInput",(function(){return r._inputArray.some((function(e){return!e.validity.valid}))})),l(this,"_toggleButtonState",(function(){r._hasInvalidInput()?(r._saveButton.classList.add(r._popupDisableButton),r._saveButton.setAttribute("disabled","disabled")):(r._saveButton.classList.remove(r._popupDisableButton),r._saveButton.removeAttribute("disabled"))})),l(this,"resetValidation",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){r._hideInputError(e)}))})),this._activeForm=t.activeForm,this._formInput=t.formInput,this._popupSaveButton=t.popupSaveButton,this._popupDisableButton=t.popupDisableButton,this._inputError=t.inputError,this._activeError=t.activeError,this._form=n,this._inputArray=Array.from(this._form.querySelectorAll(this._formInput)),this._saveButton=this._form.querySelector(this._popupSaveButton)}));function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(){document.addEventListener("keydown",o._escCloseListen=function(e){"Escape"===e.key&&o.close()})},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),this._handleEscClose()}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._escCloseListen)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",this._closeListener=function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close"))&&e.close()})}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function m(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return b(e)}function b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(n);if(r){var o=w(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return m(this,e)});function i(e){var t,n,r,a,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),u=function(e,r){n._bigImage.setAttribute("src",r),n._bigImage.setAttribute("alt","Увеличенное фото из галереи: "+e),n._bigImageCaption.textContent=e,v((t=b(n),w(i.prototype)),"open",t).call(t)},(a="open")in(r=b(n=o.call(this,e)))?Object.defineProperty(r,a,{value:u,enumerable:!0,configurable:!0,writable:!0}):r.open=u,n._bigImage=n._popup.querySelector(".popup__image"),n._bigImageCaption=n._popup.querySelector(".popup__image-caption"),n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(_);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function x(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__inputs"),n._inputArray=n._popup.querySelectorAll(".popup__input"),n._submitForm=t,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputArray.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",this._submitListener=function(t){t.preventDefault(),e._submitForm(e._getInputValues())}),k(L(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){k(L(a.prototype),"close",this).call(this),this._form.reset()}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(_);function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.userName,r=t.description;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._name.textContent,descript:this._description.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._description.textContent=e.description}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),C=n.elements.name,q=n.elements.description,A=t.querySelector(".profile__edit-button"),T=t.querySelector(".profile__add-button"),R=function(e,t){H.open(e,t)},M=function(e){return new a(e,".template-card",R).makeCard()},H=new E(".popup_big-image");H.setEventListeners();var V=new c({items:[{name:"Байкал",link:"https://images.unsplash.com/photo-1617835594990-7cd5a9b5d153?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Алтай",link:"https://images.unsplash.com/photo-1632154030737-b15df986ee37?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80"},{name:"Йошкар-Ола",link:"https://images.unsplash.com/photo-1591996686974-2e2f871e3c09?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Великий Новгород",link:"https://upload.wikimedia.org/wikipedia/commons/0/0f/%D0%A1%D0%BE%D1%84%D0%B8%D0%B9%D1%81%D0%BA%D0%B0%D1%8F_%D0%BD%D0%B0%D0%B1%D0%B5%D1%80%D0%B5%D0%B6%D0%BD%D0%B0%D1%8F-%D0%92%D0%B5%D0%BB%D0%B8%D0%BA%D0%B8%D0%B9_%D0%9D%D0%BE%D0%B2%D0%B3%D0%BE%D1%80%D0%BE%D0%B4.jpg"},{name:"Крым",link:"https://images.unsplash.com/photo-1634033636079-3b05184ab227?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Скалы Мохер",link:"https://images.unsplash.com/photo-1500456759136-362ab38eec6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80"}],renderer:function(e){var t=M(e);V.appends(t)}},".photos");V.renderItems();var N=new S(".popup_adder",(function(e){var t=M(e);V.prepends(t),N.close()}));N.setEventListeners();var G=new P({userName:".profile__name",description:".profile__description"}),F=new S(".popup_editor",(function(e){G.setUserInfo(e),F.close()}));F.setEventListeners();var W=new f(e,n);W.enableValidation();var Y=new f(e,r);Y.enableValidation(),T.addEventListener("click",(function(){N.open(),Y.resetValidation()})),A.addEventListener("click",(function(){F.open();var e=G.getUserInfo();C.value=e.userName,q.value=e.descript,W.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1rQixFQUFhUCxFQUFTUSxjQUM1QjNCLEVBQVVaLE1BQVFzQyxFQUFXaEMsU0FDN0JRLEVBQWVkLE1BQVFzQyxFQUFXNUIsU0FDbEN3QixFQUFvQkcscUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL3ZhcmlhYmxlcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6ICfQkdCw0LnQutCw0LsnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjE3ODM1NTk0OTkwLTdjZDVhOWI1ZDE1Mz9peGxpYj1yYi0xLjIuMSZpeGlkPU1ud3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTE3MCZxPTgwJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9CQ0LvRgtCw0LknLFxyXG4gICAgbGluazogJ2h0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjMyMTU0MDMwNzM3LWIxNWRmOTg2ZWUzNz9peGxpYj1yYi0xLjIuMSZpeGlkPU1ud3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTA3NCZxPTgwJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9CZ0L7RiNC60LDRgC3QntC70LAnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTkxOTk2Njg2OTc0LTJlMmY4NzFlM2MwOT9peGxpYj1yYi0xLjIuMSZpeGlkPU1ud3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTE3MCZxPTgwJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9CS0LXQu9C40LrQuNC5INCd0L7QstCz0L7RgNC+0LQnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvMC8wZi8lRDAlQTElRDAlQkUlRDElODQlRDAlQjglRDAlQjklRDElODElRDAlQkElRDAlQjAlRDElOEZfJUQwJUJEJUQwJUIwJUQwJUIxJUQwJUI1JUQxJTgwJUQwJUI1JUQwJUI2JUQwJUJEJUQwJUIwJUQxJThGLSVEMCU5MiVEMCVCNSVEMCVCQiVEMCVCOCVEMCVCQSVEMCVCOCVEMCVCOV8lRDAlOUQlRDAlQkUlRDAlQjIlRDAlQjMlRDAlQkUlRDElODAlRDAlQkUlRDAlQjQuanBnJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9Ca0YDRi9C8JyxcclxuICAgIGxpbms6ICdodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTYzNDAzMzYzNjA3OS0zYjA1MTg0YWIyMjc/aXhsaWI9cmItMS4yLjEmaXhpZD1Nbnd4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh4OCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTExNzAmcT04MCdcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQodC60LDQu9GLINCc0L7RhdC10YAnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTAwNDU2NzU5MTM2LTM2MmFiMzhlZWM2ZD9peGxpYj1yYi0xLjIuMSZpeGlkPU1ud3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTE2OSZxPTgwJ1xyXG4gIH1cclxuXTtcclxuXHJcbmNvbnN0IHVzZXJQcm9maWxlID0gW1xyXG4gIHtcclxuICAgIG5hbWU6ICcucHJvZmlsZV9fbmFtZScsXHJcbiAgICBkZXNjcmlwdDogJy5wcm9maWxlX19kZXNjcmlwdGlvbidcclxuICB9XHJcbl07XHJcblxyXG5jb25zdCB2YWxpZGF0aW9uTGlzdCA9IHtcclxuICBhY3RpdmVGb3JtOiAnLnBvcHVwX19pbnB1dHMnLFxyXG4gIGZvcm1JbnB1dDogJy5wb3B1cF9faW5wdXQnLFxyXG4gIHBvcHVwU2F2ZUJ1dHRvbjogJy5wb3B1cF9fc2F2ZScsXHJcbiAgcG9wdXBEaXNhYmxlQnV0dG9uOiAncG9wdXBfX3NhdmVfZGlzYWJsZScsXHJcbiAgaW5wdXRFcnJvcjogJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJyxcclxuICBhY3RpdmVFcnJvcjogJ3BvcHVwX19pbnB1dF9lcnJvcl9hY3RpdmUnXHJcbn07XHJcblxyXG5jb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnknKTtcclxuY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5mb3Jtcy5wcm9maWxlO1xyXG5jb25zdCBjYXJkRm9ybSA9IGRvY3VtZW50LmZvcm1zLmFkZEltYWdlO1xyXG5cclxuZXhwb3J0IHtpbml0aWFsQ2FyZHMsIG1haW4sIHByb2ZpbGVGb3JtLCBjYXJkRm9ybSwgdmFsaWRhdGlvbkxpc3R9OyIsImV4cG9ydCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKGl0ZW0sIHNlbGVjdG9yVGVtcGxhdGUsIGhhbmRsZUNhcmRDbGljaykge1xyXG4gICAgICAgIHRoaXMuX25ld0NhcmROYW1lID0gaXRlbS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlTGluayA9IGl0ZW0ubGluaztcclxuICAgICAgICB0aGlzLl9zZWxlY3RvciA9IHNlbGVjdG9yVGVtcGxhdGU7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gICAgfVxyXG5cclxuICAgIF9nZXRUZW1wbGF0ZSA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvcilcclxuICAgICAgICAgICAgLmNvbnRlbnQuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHJldHVybiBjYXJkVGVtcGxhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgX3RvZ2dsZUxpa2UgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2FyZExpa2UuY2xhc3NMaXN0LnRvZ2dsZSgnY2FyZF9fbGlrZV9hY3RpdmUnKTtcclxuICAgIH1cclxuXHJcbiAgICBfZGVsZXRlSW1hZ2UgPSAoZXZ0KSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2FyZFRlbXBsYXRlID0gbnVsbDtcclxuICAgICAgICBldnQudGFyZ2V0LmNsb3Nlc3QoJy5jYXJkJykucmVtb3ZlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX2FkZEV2ZW50cyA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jYXJkUmVtb3ZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fZGVsZXRlSW1hZ2UpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRMaWtlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl90b2dnbGVMaWtlKHRoaXMuX2NhcmRMaWtlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9uZXdDYXJkTmFtZSwgdGhpcy5faW1hZ2VMaW5rKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBtYWtlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9jYXJkVGVtcGxhdGUgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG5cclxuICAgICAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkVGVtcGxhdGUucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJyk7XHJcbiAgICAgICAgdGhpcy5fY2FyZE5hbWUgPSB0aGlzLl9jYXJkVGVtcGxhdGUucXVlcnlTZWxlY3RvcignLmNhcmRfX25hbWUnKTtcclxuICAgICAgICB0aGlzLl9jYXJkUmVtb3ZlID0gdGhpcy5fY2FyZFRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19yZW1vdmUnKTtcclxuICAgICAgICB0aGlzLl9jYXJkTGlrZSA9IHRoaXMuX2NhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZScpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMuX2ltYWdlTGluayk7XHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLnNldEF0dHJpYnV0ZSgnYWx0JywgJ9Ck0L7RgtC+INC40Lcg0LPQsNC70LXRgNC10Lg6ICcgKyB0aGlzLl9uZXdDYXJkTmFtZSk7XHJcbiAgICAgICAgdGhpcy5fY2FyZE5hbWUudGV4dENvbnRlbnQgPSB0aGlzLl9uZXdDYXJkTmFtZTtcclxuICAgICAgICB0aGlzLl9hZGRFdmVudHMoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY2FyZFRlbXBsYXRlO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIHNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXIoKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcbiAgfVxyXG5cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLmNsZWFyKCk7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSlcclxuICB9XHJcblxyXG5cclxuICBwcmVwZW5kcyhpdGVtSHRtbCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbUh0bWwpXHJcbiAgfVxyXG4gIGFwcGVuZHMoaXRlbUh0bWwpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoaXRlbUh0bWwpXHJcbiAgfVxyXG59XHJcblxyXG4iLCJleHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihsaXN0LCBmb3JtQWN0aXZlKSB7XHJcbiAgICAgICAgdGhpcy5fYWN0aXZlRm9ybSA9IGxpc3QuYWN0aXZlRm9ybTtcclxuICAgICAgICB0aGlzLl9mb3JtSW5wdXQgPSBsaXN0LmZvcm1JbnB1dDtcclxuICAgICAgICB0aGlzLl9wb3B1cFNhdmVCdXR0b24gPSBsaXN0LnBvcHVwU2F2ZUJ1dHRvbjtcclxuICAgICAgICB0aGlzLl9wb3B1cERpc2FibGVCdXR0b24gPSBsaXN0LnBvcHVwRGlzYWJsZUJ1dHRvbjtcclxuICAgICAgICB0aGlzLl9pbnB1dEVycm9yID0gbGlzdC5pbnB1dEVycm9yO1xyXG4gICAgICAgIHRoaXMuX2FjdGl2ZUVycm9yID0gbGlzdC5hY3RpdmVFcnJvcjtcclxuICAgICAgICB0aGlzLl9mb3JtID0gZm9ybUFjdGl2ZTtcclxuICAgICAgICB0aGlzLl9pbnB1dEFycmF5ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fZm9ybUlucHV0KSk7XHJcbiAgICAgICAgdGhpcy5fc2F2ZUJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9wb3B1cFNhdmVCdXR0b24pO1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0QXJyYXkuZm9yRWFjaCgoaW5wdXRzKSA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0cy5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dHMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbiA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfc2hvd0lucHV0RXJyb3IgPSAodmFsaWRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcclxuICAgICAgICBjb25zdCBlcnJvckluRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7dmFsaWRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIHZhbGlkRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3IpO1xyXG4gICAgICAgIGVycm9ySW5FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fYWN0aXZlRXJyb3IpO1xyXG4gICAgICAgIGVycm9ySW5FbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgfVxyXG5cclxuICAgIF9oaWRlSW5wdXRFcnJvciA9ICh2YWxpZEVsZW1lbnQpID0+IHtcclxuICAgICAgICBjb25zdCBlcnJvckluRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7dmFsaWRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIHZhbGlkRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3IpO1xyXG4gICAgICAgIGVycm9ySW5FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fYWN0aXZlRXJyb3IpO1xyXG4gICAgICAgIGVycm9ySW5FbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgICB9XHJcblxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eSA9ICh2YWxpZEVsZW1lbnQpID0+IHtcclxuICAgICAgICBpZiAoIXZhbGlkRWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcih2YWxpZEVsZW1lbnQsIHZhbGlkRWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgdGhpcy5faGlkZUlucHV0RXJyb3IodmFsaWRFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBfaGFzSW52YWxpZElucHV0ID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnB1dEFycmF5LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBfdG9nZ2xlQnV0dG9uU3RhdGUgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NhdmVCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9wb3B1cERpc2FibGVCdXR0b24pO1xyXG4gICAgICAgICAgICB0aGlzLl9zYXZlQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NhdmVCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9wb3B1cERpc2FibGVCdXR0b24pO1xyXG4gICAgICAgICAgICB0aGlzLl9zYXZlQnV0dG9uLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVzZXRWYWxpZGF0aW9uID0gKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRBcnJheS5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3Ioc2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xyXG4gICAgfVxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9hY3RpdmUnKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX2FjdGl2ZScpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9lc2NDbG9zZUxpc3Rlbik7XHJcbiAgICB9XHJcblxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlID0gKCkgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9lc2NDbG9zZUxpc3RlbiA9IChldnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2Nsb3NlTGlzdGVuZXIgPSAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIoc2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2JpZ0ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xyXG4gICAgICAgIHRoaXMuX2JpZ0ltYWdlQ2FwdGlvbj10aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlLWNhcHRpb24nKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuID0gKG5hbWUsIGxpbmspID0+IHtcclxuICAgICAgICB0aGlzLl9iaWdJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGxpbmspO1xyXG4gICAgICAgIHRoaXMuX2JpZ0ltYWdlLnNldEF0dHJpYnV0ZSgnYWx0JywgJ9Cj0LLQtdC70LjRh9C10L3QvdC+0LUg0YTQvtGC0L4g0LjQtyDQs9Cw0LvQtdGA0LXQuDogJyArIG5hbWUpO1xyXG4gICAgICAgIHRoaXMuX2JpZ0ltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHNlbGVjdG9yLCBzdWJtaXRGb3JtKSB7XHJcbiAgICAgICAgc3VwZXIoc2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0cycpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0QXJyYXkgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0Rm9ybSA9IHN1Ym1pdEZvcm07XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2lucHV0QXJyYXkuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgbmV3VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIG5ld1ZhbHVlcztcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX3N1Ym1pdExpc3RlbmVyID0gKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5fc3VibWl0Rm9ybSh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgdXNlck5hbWUsIGRlc2NyaXB0aW9uIH0pIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZSk7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRlc2NyaXB0aW9uKTtcclxuICAgIH1cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IGdldEluZm8gPSB7XHJcbiAgICAgICAgICAgIHVzZXJOYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBkZXNjcmlwdDogdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnRcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBnZXRJbmZvO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvKG5ld0lucHV0cykge1xyXG4gICAgICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBuZXdJbnB1dHMubmFtZTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IG5ld0lucHV0cy5kZXNjcmlwdGlvbjtcclxuICAgIH1cclxufSIsImltcG9ydCB7IGluaXRpYWxDYXJkcywgbWFpbiwgcHJvZmlsZUZvcm0sIGNhcmRGb3JtLCB2YWxpZGF0aW9uTGlzdCB9IGZyb20gXCIuL2NvbXBvbmVudHMvdmFyaWFibGVzXCI7XHJcbmltcG9ydCB7IENhcmQgfSBmcm9tIFwiLi9jb21wb25lbnRzL0NhcmRcIjtcclxuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gXCIuL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSBcIi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCB7IFBvcHVwV2l0aEltYWdlIH0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgXCIuL3N0eWxlcy9pbmRleC5jc3NcIjtcclxuXHJcblxyXG5jb25zdCBwcm9maWxlRGVzY3JpYmUgPSB7XHJcbiAgdXNlck5hbWU6ICcucHJvZmlsZV9fbmFtZScsXHJcbiAgZGVzY3JpcHRpb246ICcucHJvZmlsZV9fZGVzY3JpcHRpb24nXHJcbn07XHJcbmNvbnN0IGlucHV0TmFtZSA9IHByb2ZpbGVGb3JtLmVsZW1lbnRzLm5hbWU7XHJcbmNvbnN0IGlucHV0bkRlc2NyaXB0ID0gcHJvZmlsZUZvcm0uZWxlbWVudHMuZGVzY3JpcHRpb247XHJcblxyXG5cclxuLy8tLS0tLWJ1dHRvbnMtLS0tLS0tXHJcbmNvbnN0IHByb2ZpbGVPcGVuQnV0dG9uID0gbWFpbi5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idXR0b24nKTtcclxuY29uc3QgY2FyZEFkZEJ1dHRvbiA9IG1haW4ucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcclxuXHJcblxyXG4vLz09PT09PT1mdW5jdGlvbnM9PT09PT09PT1cclxuY29uc3QgaGFuZGxlQ2FyZENsaWNrID0gKGNhcmROYW1lLCBjYXJkTGluaykgPT4ge1xyXG4gIGJpZ0ltYWdlLm9wZW4oY2FyZE5hbWUsIGNhcmRMaW5rKTtcclxufVxyXG5cclxuY29uc3QgYWRkTmV3Q2FyZCA9IChkZXNjcmliZSkgPT4ge1xyXG4gIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChkZXNjcmliZSwgJy50ZW1wbGF0ZS1jYXJkJywgaGFuZGxlQ2FyZENsaWNrKTtcclxuICBjb25zdCBuZXdSZXR1cm5DYXJkID0gbmV3Q2FyZC5tYWtlQ2FyZCgpO1xyXG4gIHJldHVybiBuZXdSZXR1cm5DYXJkO1xyXG59XHJcblxyXG5cclxuLy89PT09PT09Y2xhc3NlcyBhbmQgY2FsbGJhY2tzPT09PT09PT09XHJcbmNvbnN0IGJpZ0ltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKCcucG9wdXBfYmlnLWltYWdlJyk7XHJcbmJpZ0ltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBhZGRHYWxhcnkgPSBuZXcgU2VjdGlvbih7XHJcbiAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgIGNvbnN0IHJldHVybkNhcmQgPSBhZGROZXdDYXJkKGl0ZW0pO1xyXG4gICAgYWRkR2FsYXJ5LmFwcGVuZHMocmV0dXJuQ2FyZCk7XHJcbiAgfVxyXG59LCBcIi5waG90b3NcIik7XHJcbmFkZEdhbGFyeS5yZW5kZXJJdGVtcygpO1xyXG5cclxuY29uc3QgcG9wdXBDYXJkRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gICcucG9wdXBfYWRkZXInLFxyXG4gIChkZXNjcmliZSkgPT4ge1xyXG4gICAgY29uc3QgcmV0dXJuQ2FyZCA9IGFkZE5ld0NhcmQoZGVzY3JpYmUpO1xyXG4gICAgYWRkR2FsYXJ5LnByZXBlbmRzKHJldHVybkNhcmQpO1xyXG4gICAgcG9wdXBDYXJkRm9ybS5jbG9zZSgpO1xyXG4gIH1cclxuKTtcclxucG9wdXBDYXJkRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8ocHJvZmlsZURlc2NyaWJlKTtcclxuXHJcbmNvbnN0IHBvcHVwUHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gICcucG9wdXBfZWRpdG9yJyxcclxuICAobmV3SW5wdXRzKSA9PiB7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhuZXdJbnB1dHMpO1xyXG4gICAgcG9wdXBQcm9maWxlLmNsb3NlKCk7XHJcbiAgfVxyXG4pO1xyXG5wb3B1cFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vLS0tLS0tLS1lbmFibGUgdmFsaWRhdGlvbi0tLS0tLS0tLS1cclxuY29uc3QgcHJvZmlsZUZvcm1WYWxpZGF0ZSA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25MaXN0LCBwcm9maWxlRm9ybSk7XHJcbnByb2ZpbGVGb3JtVmFsaWRhdGUuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0ZSA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25MaXN0LCBjYXJkRm9ybSk7XHJcbmNhcmRGb3JtVmFsaWRhdGUuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuXHJcbi8vPT09PT09PT09PWJ1dHRvbnMgbGlzdGVuZXJzPT09PT09PT09PT1cclxuXHJcbmNhcmRBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgcG9wdXBDYXJkRm9ybS5vcGVuKCk7XHJcbiAgY2FyZEZvcm1WYWxpZGF0ZS5yZXNldFZhbGlkYXRpb24oKTtcclxufSlcclxuXHJcbnByb2ZpbGVPcGVuQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIHBvcHVwUHJvZmlsZS5vcGVuKCk7XHJcbiAgY29uc3Qgb2xkUHJvZmlsZSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgaW5wdXROYW1lLnZhbHVlID0gb2xkUHJvZmlsZS51c2VyTmFtZTtcclxuICBpbnB1dG5EZXNjcmlwdC52YWx1ZSA9IG9sZFByb2ZpbGUuZGVzY3JpcHQ7XHJcbiAgcHJvZmlsZUZvcm1WYWxpZGF0ZS5yZXNldFZhbGlkYXRpb24oKTtcclxufSlcclxuXHJcbiJdLCJuYW1lcyI6WyJ2YWxpZGF0aW9uTGlzdCIsImFjdGl2ZUZvcm0iLCJmb3JtSW5wdXQiLCJwb3B1cFNhdmVCdXR0b24iLCJwb3B1cERpc2FibGVCdXR0b24iLCJpbnB1dEVycm9yIiwiYWN0aXZlRXJyb3IiLCJtYWluIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicHJvZmlsZUZvcm0iLCJmb3JtcyIsInByb2ZpbGUiLCJjYXJkRm9ybSIsImFkZEltYWdlIiwiQ2FyZCIsIml0ZW0iLCJzZWxlY3RvclRlbXBsYXRlIiwiaGFuZGxlQ2FyZENsaWNrIiwiX3NlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9jYXJkTGlrZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImV2dCIsIl9jYXJkVGVtcGxhdGUiLCJ0YXJnZXQiLCJjbG9zZXN0IiwicmVtb3ZlIiwiX2NhcmRSZW1vdmUiLCJhZGRFdmVudExpc3RlbmVyIiwiX2RlbGV0ZUltYWdlIiwiX3RvZ2dsZUxpa2UiLCJfY2FyZEltYWdlIiwiX2hhbmRsZUNhcmRDbGljayIsIl9uZXdDYXJkTmFtZSIsIl9pbWFnZUxpbmsiLCJ0aGlzIiwibmFtZSIsImxpbmsiLCJfZ2V0VGVtcGxhdGUiLCJfY2FyZE5hbWUiLCJzZXRBdHRyaWJ1dGUiLCJ0ZXh0Q29udGVudCIsIl9hZGRFdmVudHMiLCJTZWN0aW9uIiwic2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImlubmVySFRNTCIsImNsZWFyIiwiZm9yRWFjaCIsIml0ZW1IdG1sIiwicHJlcGVuZCIsImFwcGVuZCIsIkZvcm1WYWxpZGF0b3IiLCJsaXN0IiwiZm9ybUFjdGl2ZSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9pbnB1dEFycmF5IiwiaW5wdXRzIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl9zZXRFdmVudExpc3RlbmVycyIsInZhbGlkRWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9ySW5FbGVtZW50IiwiX2Zvcm0iLCJpZCIsImFkZCIsIl9pbnB1dEVycm9yIiwiX2FjdGl2ZUVycm9yIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwic29tZSIsImlucHV0RWxlbWVudCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfc2F2ZUJ1dHRvbiIsIl9wb3B1cERpc2FibGVCdXR0b24iLCJyZW1vdmVBdHRyaWJ1dGUiLCJpbnB1dCIsIl9hY3RpdmVGb3JtIiwiX2Zvcm1JbnB1dCIsIl9wb3B1cFNhdmVCdXR0b24iLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiUG9wdXAiLCJfZXNjQ2xvc2VMaXN0ZW4iLCJrZXkiLCJjbG9zZSIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfY2xvc2VMaXN0ZW5lciIsImN1cnJlbnRUYXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEltYWdlIiwiX2JpZ0ltYWdlIiwiX2JpZ0ltYWdlQ2FwdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRGb3JtIiwiX3N1Ym1pdEZvcm0iLCJuZXdWYWx1ZXMiLCJ2YWx1ZSIsIl9zdWJtaXRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJVc2VySW5mbyIsInVzZXJOYW1lIiwiZGVzY3JpcHRpb24iLCJfbmFtZSIsIl9kZXNjcmlwdGlvbiIsImRlc2NyaXB0IiwibmV3SW5wdXRzIiwiaW5wdXROYW1lIiwiZWxlbWVudHMiLCJpbnB1dG5EZXNjcmlwdCIsInByb2ZpbGVPcGVuQnV0dG9uIiwiY2FyZEFkZEJ1dHRvbiIsImNhcmROYW1lIiwiY2FyZExpbmsiLCJiaWdJbWFnZSIsIm9wZW4iLCJhZGROZXdDYXJkIiwiZGVzY3JpYmUiLCJtYWtlQ2FyZCIsInNldEV2ZW50TGlzdGVuZXJzIiwiYWRkR2FsYXJ5IiwicmV0dXJuQ2FyZCIsImFwcGVuZHMiLCJyZW5kZXJJdGVtcyIsInBvcHVwQ2FyZEZvcm0iLCJwcmVwZW5kcyIsInVzZXJJbmZvIiwicG9wdXBQcm9maWxlIiwic2V0VXNlckluZm8iLCJwcm9maWxlRm9ybVZhbGlkYXRlIiwiZW5hYmxlVmFsaWRhdGlvbiIsImNhcmRGb3JtVmFsaWRhdGUiLCJyZXNldFZhbGlkYXRpb24iLCJvbGRQcm9maWxlIiwiZ2V0VXNlckluZm8iXSwic291cmNlUm9vdCI6IiJ9