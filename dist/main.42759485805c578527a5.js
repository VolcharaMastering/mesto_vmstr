!function(){"use strict";var e={activeForm:".popup__inputs",formInput:".popup__input",popupSaveButton:".popup__save",popupDisableButton:"popup__save_disable",inputError:"popup__input_type_error",activeError:"popup__input_error_active"},t=document.querySelector(".gallery"),n=document.forms.profile,r=document.forms.addImage;function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){function e(t,n,r,o,c,a,u){var s=this,l=o.handleCardDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_getTemplate",(function(){return document.querySelector(s._selector).content.cloneNode(!0)})),i(this,"_deleteImage",(function(e){s._handleCardDelete(s._cardId,e)})),i(this,"delCard",(function(e){s._cardTemplate=null,e.target.closest(".card").remove()})),i(this,"_addEvents",(function(){s._ownerId==myId?s._cardRemove.addEventListener("click",s._deleteImage):s._cardRemove.classList.remove("card__remove"),s._cardLike.addEventListener("click",(function(){s._like?(s._getLikes={},Object.assign(s._getLikes,s._delLike(s._cardId)),console.log("get likes= "+s._getLikes),s._addLikeCounter()):(s._addLike(s._cardId).then((function(e){return console.log("count="+e.length),newLikes})).catch((function(e){console.log(e)})),s._addLikeCounter()),s._cardLike.classList.toggle("card__like_active")})),s._cardImage.addEventListener("click",(function(){s._handleCardClick(s._newCardName,s._imageLink)}))})),i(this,"_checkLikes",(function(){s._getLikes.length>0&&null!=s._getLikes.find((function(e){return e._id==s._myId}))&&(s._cardLike.classList.add("card__like_active"),s._like=!0)})),i(this,"_addLikeCounter",(function(){s._likeNumber.textContent=s._getLikes.length})),this._newCardName=t.name,this._imageLink=t.link,this._getLikes=t.likes,this._cardId=t._id,this._ownerId=t.owner._id,this._selector=n,this._handleCardClick=r,this._handleCardDelete=l,this._delLike=c,this._addLike=a,this._myId=u,this._like=!1}var t,n;return t=e,(n=[{key:"makeCard",value:function(){return this._cardTemplate=this._getTemplate(),this._cardImage=this._cardTemplate.querySelector(".card__image"),this._cardName=this._cardTemplate.querySelector(".card__name"),this._cardRemove=this._cardTemplate.querySelector(".card__remove"),this._cardLike=this._cardTemplate.querySelector(".card__like"),this._likeNumber=this._cardTemplate.querySelector(".card__like-count"),this._checkLikes(),this._addLikeCounter(),this._cardImage.setAttribute("src",this._imageLink),this._cardImage.setAttribute("alt","Фото из галереи: "+this._newCardName),this._cardName.textContent=this._newCardName,this._addEvents(),this._cardTemplate}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){return e._renderer(t)}))}},{key:"prepends",value:function(e){this._container.prepend(e)}},{key:"appends",value:function(e){this._container.append(e)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=l((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),f(this,"_setEventListeners",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),f(this,"enableValidation",(function(){r._setEventListeners()})),f(this,"_showInputError",(function(e,t){var n=r._form.querySelector(".".concat(e.id,"-error"));e.classList.add(r._inputError),n.classList.add(r._activeError),n.textContent=t})),f(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputError),t.classList.remove(r._activeError),t.textContent=""})),f(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),f(this,"_hasInvalidInput",(function(){return r._inputArray.some((function(e){return!e.validity.valid}))})),f(this,"_toggleButtonState",(function(){r._hasInvalidInput()?(r._saveButton.classList.add(r._popupDisableButton),r._saveButton.setAttribute("disabled","disabled")):(r._saveButton.classList.remove(r._popupDisableButton),r._saveButton.removeAttribute("disabled"))})),f(this,"resetValidation",(function(){r._toggleButtonState(),r._inputArray.forEach((function(e){r._hideInputError(e)}))})),this._activeForm=t.activeForm,this._formInput=t.formInput,this._popupSaveButton=t.popupSaveButton,this._popupDisableButton=t.popupDisableButton,this._inputError=t.inputError,this._activeError=t.activeError,this._form=n,this._inputArray=Array.from(this._form.querySelectorAll(this._formInput)),this._saveButton=this._form.querySelector(this._popupSaveButton)}));function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(){document.addEventListener("keydown",o._escCloseListen=function(e){"Escape"===e.key&&o.close()})},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),this._handleEscClose()}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._escCloseListen)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",this._closeListener=function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close"))&&e.close()})}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function y(e,t){return y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},y(e,t)}function v(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return b(e)}function b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(n);if(r){var o=k(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return v(this,e)});function i(e){var t,n,r,c,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a=function(e,r){n._bigImage.setAttribute("src",r),n._bigImage.setAttribute("alt","Увеличенное фото из галереи: "+e),n._bigImageCaption.textContent=e,m((t=b(n),k(i.prototype)),"open",t).call(t)},(c="open")in(r=b(n=o.call(this,e)))?Object.defineProperty(r,c,{value:a,enumerable:!0,configurable:!0,writable:!0}):r.open=a,n._bigImage=n._popup.querySelector(".popup__image"),n._bigImageCaption=n._popup.querySelector(".popup__image-caption"),n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(_);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},O.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function C(e,t){return C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},C(e,t)}function S(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._form=n._popup.querySelector(".popup__inputs"),n._inputArray=n._popup.querySelectorAll(".popup__input"),n._getCardsFromApi=t,n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputArray.forEach((function(t){e[t.name]=t.value})),console.log(e),e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._getCardsFromApi(e._getInputValues())})),O(P(c.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){O(P(c.prototype),"close",this).call(this),this._form.reset()}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(_);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){var n=t.userName,r=t.description;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._name.textContent,descript:this._description.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._description.textContent=e.description}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url="https://mesto.nomoreparties.co/v1/cohort-43/",this._token=t,this._headers={"Content-type":"application/json",authorization:"9ccf29bd-3d67-4cc8-8c99-82c18d019a44"}}var t,n;return t=e,(n=[{key:"getData",value:function(e){return fetch(this._url+e,{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Bug detected!")}))}},{key:"delLike",value:function(e){return fetch(this._url+e,{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?(console.log("resULT"+e),e):Promise.reject("Bug detected!")}))}},{key:"addLike",value:function(e){return fetch(this._url+e,{headers:this._headers,method:"PUT"}).then((function(e){return e.ok?(console.log("resULT"+e),e):Promise.reject("Bug detected!")}))}},{key:"setCard",value:function(e,t){return fetch(this._url+e,{headers:this._headers,method:"POST",body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Bug detected!")}))}},{key:"delCard",value:function(e,t){return fetch(this._url+e+t,{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Bug detected!")}))}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function D(e,t){return D=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},D(e,t)}function x(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return N(e)}function N(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(n);if(r){var o=V(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return x(this,e)});function i(e){var t,n,r,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),c=function(e){t._pressYess=e,console.log("ACTION")},(r="setSubmitAction")in(n=N(t=o.call(this,e)))?Object.defineProperty(n,r,{value:c,enumerable:!0,configurable:!0,writable:!0}):n[r]=c,t._pressYes=function(){},t}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(_),F=n.elements.name,G=n.elements.description,M=t.querySelector(".profile__edit-button"),Y=t.querySelector(".profile__add-button"),z=function(e,t){K.open(e,t)},H=function(e){return W.delLike("cards/".concat(e,"/likes")).then((function(e){return console.log("likes="+e.length),console.log("clikeArray="+e),e})).catch((function(e){console.log(e)}))},J=function(e){return W.addLike("cards/".concat(e,"/likes")).then((function(e){return console.log("likes="+e.length),console.log("clikeArray="+e),e})).catch((function(e){console.log(e)}))},K=new w(".popup_big-image");K.setEventListeners();var Q=new U(".popup_question");Q.setEventListeners();var W=new q("9ccf29bd-3d67-4cc8-8c99-82c18d019a44");W.getData("users/me").then((function(e){window.myId=e._id,W.getData("cards").then((function(e){window.addGalary=new u({items:e,renderer:function(e){var t=X(e,myId);addGalary.appends(t)}},".photos"),addGalary.renderItems()}))})).catch((function(e){console.log(e)}));var X=function(e,t){var n=new c(e,".template-card",z,{handleCardDelete:function(e,t){Q.open(),Q.setSubmitAction((function(){console.log("SUBMIT"),W.delCard("cards/",e).then((function(){n.delCard(t),Q.close()})).catch((function(e){console.log(e)}))}))}},H,J,t);return n.makeCard()},Z=new I(".popup_adder",(function(e){W.setCard("cards",e).then((function(e){var t=X(e,e.owner._id);addGalary.prepends(t),Z.close()})).catch((function(e){console.log(e)}))}));Z.setEventListeners();var $=new B({userName:".profile__name",description:".profile__description"}),ee=new I(".popup_editor",(function(e){$.setUserInfo(e),ee.close()}));ee.setEventListeners();var te=new p(e,n);te.enableValidation();var ne=new p(e,r);ne.enableValidation(),Y.addEventListener("click",(function(){Z.open(),ne.resetValidation()})),M.addEventListener("click",(function(){ee.open();var e=$.getUserInfo();F.value=e.userName,G.value=e.descript,te.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,